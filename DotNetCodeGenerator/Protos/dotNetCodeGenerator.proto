syntax = "proto3";

option csharp_namespace = "DotNetCodeGenerator";

package dotNetCodeGenerator;

service DotNetCodeGenerator {
  rpc CreateEntity (Entity) returns (EntityResult);
  rpc CreateRepositoryInterface (EntityForRepository) returns (EntityResult);
  rpc CreateRepository (EntityForRepository) returns (EntityResult);
  rpc CreateEnum (Enum) returns (EntityResult);
  rpc CreateDtos (Entity) returns (DtoResult);
}

message Entity {
  repeated string usings = 1;
  string namespace = 2;
  string name = 3;
  PrimaryKeyType primaryKeyType = 4;
  bool fullAudited = 5;
  TenantType tenantType = 6;
  repeated Property properties = 7;
}

message EntityForRepository {
  repeated string usings = 1;
  string namespace = 2;
  string name = 3;
  PrimaryKeyType primaryKeyType = 4;
  string projectName = 5;
}

message EntityResult{
  Entity entity = 1;
  string stringified = 2;
}

message Property {
  string type = 1;
  string name = 2;
  bool nullable = 3;
  bool isRelationalProperty = 4;
  optional PrimaryKeyType relationalEntityPrimaryKeyType = 5;
  optional string relationalEntityName = 6;
  optional RelationType relationType = 7;
}

message Enum{
  string namespace = 1;
  string name = 2;
  repeated EnumValue values = 3;
}

message EnumValue{
  string name = 1;
  int32 value = 2;
}

enum PrimaryKeyType{
  int = 0;
  long = 1;
  guid = 2;
};

enum TenantType{
  none = 0;
  may = 1;
  must = 2;
};

enum RelationType{
  OneToOne = 0;
  OneToMany = 1;
  ManyToMany = 2;
};

message DtoResult{
  string fullOutputStringify = 1;
  string partOutputStringify = 2;
  string createInputStringify = 3;
  string updateInputStringify = 4;
  string getInputStringify = 5;
  string deleteInputStringify = 6;
}